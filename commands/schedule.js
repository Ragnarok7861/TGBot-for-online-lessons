const { getSchedule } = require('../db/queries');

async function handleScheduleCommand(ctx) {
  const message = ctx.message.text.split(' ').slice(1);

  if (message.length < 2) {
    return ctx.reply('–ò—Å–ø–æ–ª—å–∑—É–π —Ñ–æ—Ä–º–∞—Ç: /schedule –ò–º—è –§–∞–º–∏–ª–∏—è');
  }

  const name = message[0]?.trim();
  const surname = message[1]?.trim();

  if (!name || !surname) {
    return ctx.reply('–ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É–∫–∞–∑–∞–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: /schedule –ò–º—è –§–∞–º–∏–ª–∏—è');
  }

  console.log('–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è:', { name, surname });

  try {
    const schedule = await getSchedule(name, surname);
    if (schedule.length === 0) {
      return ctx.reply(`–î–ª—è ${name} ${surname} —É—Ä–æ–∫–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.`);
    }

    const response = schedule
      .map(
        (item) =>
          `üìÖ ${item.date} (${item.day_of_week})\n‚è∞ ${item.time} ‚Äî ${item.subject}`
      )
      .join('\n\n');

    ctx.reply(`–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è ${name} ${surname}:\n${response}`);
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è:', err);
    ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  }
}

module.exports = handleScheduleCommand;
